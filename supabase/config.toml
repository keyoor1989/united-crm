
project_id = "klieshkrqryigtqtshka"

[api]
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. public and storage are always included.
schemas = ["public", "storage"]
# Extra schemas to add to the search_path of every request. public is always included.
extra_search_path = ["public", "extensions"]
# Maximum rows returns in a single REST request.
max_rows = 1000

[db]
# Port to use for the local database URL.
port = 54322
# Port used by psql to connect to the database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 15

[studio]
# Port to use for Supabase Studio.
port = 54323

[inbucket]
# Port to use for the email testing server web interface.
port = 54324
# Port to use for the email testing server SMTP port.
smtp_port = 54325
# Port to use for the email testing server POP3 port.
pop3_port = 54326

[storage]
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

[functions]
# Port to use for Functions API URL.
port = 54325

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://localhost:3000", "https://localhost:5173"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# Allow/disallow new user signups to your project.
enable_signup = true
# If disabled, the user will not be able to change their email address.
enable_email_autoconfirm = true
# If enabled, users need to confirm their email address before signing in.
enable_phone_autoconfirm = false
# If enabled, users need to confirm their phone number before signing in.
enable_username = false

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = true
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = true

[auth.oauth.google]
# Your Google OAuth2 client ID that you created in API Console.
client_id = ""
# Your Google OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.github]
# Your GitHub OAuth2 client ID that you created in API Console.
client_id = ""
# Your GitHub OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.facebook]
# Your Facebook OAuth2 client ID that you created in API Console.
client_id = ""
# Your Facebook OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.gitlab]
# Your GitLab OAuth2 client ID that you created in API Console.
client_id = ""
# Your GitLab OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.bitbucket]
# Your Bitbucket OAuth2 client ID that you created in API Console.
client_id = ""
# Your Bitbucket OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.azure]
# Your Azure OAuth2 client ID that you created in API Console.
client_id = ""
# Your Azure OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.apple]
# Your Apple OAuth2 client ID that you created in API Console.
client_id = ""
# Your Apple OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.discord]
# Your Discord OAuth2 client ID that you created in API Console.
client_id = ""
# Your Discord OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.twitter]
# Your Twitter OAuth2 client ID that you created in API Console.
client_id = ""
# Your Twitter OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.twitch]
# Your Twitch OAuth2 client ID that you created in API Console.
client_id = ""
# Your Twitch OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.spotify]
# Your Spotify OAuth2 client ID that you created in API Console.
client_id = ""
# Your Spotify OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.slack]
# Your Slack OAuth2 client ID that you created in API Console.
client_id = ""
# Your Slack OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[auth.oauth.workos]
# Your WorkOS OAuth2 client ID that you created in API Console.
client_id = ""
# Your WorkOS OAuth2 Secret that you created in API Console.
secret = ""
# Automatically add new users to this service role. This assign the specified
# role to users newly created by sign up or invite.
default_role = ""
# Automatically redirect to this URL after a successful sign in.
redirect_uri = ""
# Set user profile urls to be saved for this provider
url_params = {}

[analytics]
enabled = false
port = 54327
vector_port = 54328
# Configure one of these backends
backend = "postgres"
